/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;
import net.proteanit.sql.DbUtils;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.SqlDateModel;
/**
 *
 * @author Badar Muneer
 */
public class ProjectScreen extends javax.swing.JPanel {

    /**
     * Creates new form ProjectScreen
     */
    private String deadlineDate;
    public ProjectScreen() 
    {
        initComponents();
        showDate();
        //fillTable();
        fillComboBox();
    }
    
    public void fillComboBox()
    {
        try 
        {
            ResultSet rs=Project.statement.executeQuery("SELECT TYPE_ID FROM PRO_TYPES");
            
            while(rs.next())
            {
                projectTypeBox.addItem(rs.getString("TYPE_ID"));
            }
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, ex,"Error",JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(ProjectScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void showDate()
    {
        SqlDateModel model=new SqlDateModel();
        Properties p=new Properties();
        p.put("text.day","Day");
        p.put("text.month","Month");
        p.put("text.year","Year");
        
        JDatePanelImpl panel=new JDatePanelImpl(model,p);
        JDatePickerImpl datePicker=new JDatePickerImpl(panel,new AbstractFormatter()
        {
            @Override
            public String valueToString(Object value)
            {
                if(value!=null)
                {
                    Calendar cal=(Calendar)(value);
                    SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd");
                    String strDate=format.format(cal.getTime()); deadlineDate=strDate;
                    return strDate;
                }return "";
            }
            
            @Override
            public Object stringToValue(String text)
            {
              return LocalDate.now().toString();
            }
        });
        datePanel.add(datePicker,BorderLayout.CENTER);
    }
//    public void fillTable()
//    {
//        try 
//        {
//            ResultSet rs=Project.statement.executeQuery("SELECT P.PRO_ID,P.EMPNO,P.PRO_TITLE,P.WORTH,P.START_DATE,P.STATUS,P.DEADLINE,T.PRO_TYPE FROM PROS P , PRO_TYPES T WHERE P.TYPE_ID=T.TYPE_ID");
//            projectsTable.setModel(DbUtils.resultSetToTableModel(rs));
//            
//        } catch (SQLException ex) 
//        {
//            JOptionPane.showMessageDialog(this, ex,"Error",JOptionPane.ERROR_MESSAGE);
//            ex.printStackTrace();
//            //Logger.getLogger(ProjectScreen.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        projectIdTextField = new javax.swing.JTextField();
        projectTypeLabel = new javax.swing.JLabel();
        projectTypeBox = new javax.swing.JComboBox<>();
        assignLabel = new javax.swing.JLabel();
        empNumberTextField = new javax.swing.JTextField();
        projectTitleTextField = new javax.swing.JTextField();
        datePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        proWorth = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        projectIdTextFieldTwo = new javax.swing.JTextField();
        projectCompleteCheck = new javax.swing.JCheckBox();
        cancelledCheck = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Take Project"));

        projectIdTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        projectIdTextField.setForeground(java.awt.Color.gray);
        projectIdTextField.setText("Project ID");
        projectIdTextField.setToolTipText("if you want update, enter new ID");
        projectIdTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectIdTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectIdTextFieldFocusLost(evt);
            }
        });

        projectTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        projectTypeLabel.setText("Project Type");

        assignLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        assignLabel.setText("Assigning To:");

        empNumberTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        empNumberTextField.setForeground(java.awt.Color.gray);
        empNumberTextField.setText("Emp Number");
        empNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                empNumberTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                empNumberTextFieldFocusLost(evt);
            }
        });

        projectTitleTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        projectTitleTextField.setForeground(java.awt.Color.gray);
        projectTitleTextField.setText("Project Title");
        projectTitleTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectTitleTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectTitleTextFieldFocusLost(evt);
            }
        });
        projectTitleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectTitleTextFieldActionPerformed(evt);
            }
        });

        datePanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Deadline:");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        proWorth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        proWorth.setForeground(java.awt.Color.gray);
        proWorth.setText("Worth");
        proWorth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                proWorthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                proWorthFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(projectIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(assignLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(empNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(projectTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(projectTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(datePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(projectTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(proWorth, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton)
                        .addGap(28, 28, 28)
                        .addComponent(doneButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(projectTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proWorth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(doneButton))
                .addGap(34, 34, 34))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Project Done"));

        projectIdTextFieldTwo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        projectIdTextFieldTwo.setForeground(java.awt.Color.gray);
        projectIdTextFieldTwo.setText("Project ID");
        projectIdTextFieldTwo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                projectIdTextFieldTwoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                projectIdTextFieldTwoFocusLost(evt);
            }
        });

        projectCompleteCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        projectCompleteCheck.setText("Project Completed");
        projectCompleteCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                projectCompleteCheckItemStateChanged(evt);
            }
        });

        cancelledCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelledCheck.setText("Cancelled");
        cancelledCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cancelledCheckItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(projectIdTextFieldTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(cancelledCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(projectCompleteCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectCompleteCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectIdTextFieldTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelledCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void projectIdTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectIdTextFieldFocusGained
        // TODO add your handling code here:
        
        if(this.projectIdTextField.getText().equals("Project ID"))
        {
            this.projectIdTextField.setText("");
            projectIdTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_projectIdTextFieldFocusGained

    private void projectIdTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectIdTextFieldFocusLost
        // TODO add your handling code here:
        if(this.projectIdTextField.getText().equals(""))
        {
            this.projectIdTextField.setText("Project ID");
            projectIdTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_projectIdTextFieldFocusLost

    private void projectTitleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectTitleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projectTitleTextFieldActionPerformed

    private void projectTitleTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectTitleTextFieldFocusGained
        // TODO add your handling code here:
        if(this.projectTitleTextField.getText().equals("Project Title"))
        {
            projectTitleTextField.setText("");
            projectTitleTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_projectTitleTextFieldFocusGained

    private void projectTitleTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectTitleTextFieldFocusLost
        // TODO add your handling code here:
        if(this.projectTitleTextField.getText().equals(""))
        {
            projectTitleTextField.setText("Project Title");
            projectTitleTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_projectTitleTextFieldFocusLost

    private void empNumberTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empNumberTextFieldFocusGained
        // TODO add your handling code here:
        if(empNumberTextField.getText().equals("Emp Number"))
        {
            empNumberTextField.setText("");
            empNumberTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_empNumberTextFieldFocusGained

    private void empNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_empNumberTextFieldFocusLost
        // TODO add your handling code here:
        if(empNumberTextField.getText().equals(""))
        {
            empNumberTextField.setText("Emp Number");
            empNumberTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_empNumberTextFieldFocusLost

    private void projectIdTextFieldTwoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectIdTextFieldTwoFocusGained
        // TODO add your handling code here:
        
        if(this.projectIdTextFieldTwo.getText().equals("Project ID"))
        {
            this.projectIdTextFieldTwo.setText("");
            projectIdTextFieldTwo.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_projectIdTextFieldTwoFocusGained

    private void projectIdTextFieldTwoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_projectIdTextFieldTwoFocusLost
        // TODO add your handling code here:
        
        if(this.projectIdTextFieldTwo.getText().equals(""))
        {
            this.projectIdTextFieldTwo.setText("Project ID");
            projectIdTextFieldTwo.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_projectIdTextFieldTwoFocusLost

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
        
        if(this.projectIdTextField.getText().equals("Project ID") || this.projectTitleTextField.getText().equals("Project Title") || this.empNumberTextField.getText().equals("Emp Number"))
        {
            JOptionPane.showMessageDialog(this,"Some required fields are empty","Error",JOptionPane.ERROR_MESSAGE);
            return;
            
        }
        
        int projectId=Integer.parseInt(projectIdTextField.getText());
        String projectTitle=projectTitleTextField.getText();
        int empNumber=Integer.parseInt(empNumberTextField.getText());
        int type=Integer.parseInt((String)this.projectTypeBox.getSelectedItem());
        int worth=Integer.parseInt(proWorth.getText());
        System.out.println(deadlineDate);
        try
        {
            Project.statement.executeQuery("INSERT INTO PROS(PRO_ID,TYPE_ID,EMPNO,PRO_TITLE,DEADLINE,WORTH) VALUES("+projectId+","+type+","+empNumber+",'"+projectTitle+"',"+"to_date('"+deadlineDate+"','YYYY-MM-DD'),"+worth+")");
            //this.fillTable();
            JOptionPane.showMessageDialog(this,"Inserted Successfully..","Insert",JOptionPane.INFORMATION_MESSAGE);
            projectIdTextField.setText("Project ID");
            projectTitleTextField.setText("Project Title");
            empNumberTextField.setText("Emp Number");
            proWorth.setText("Worth");
            
            projectIdTextField.setForeground(Color.GRAY);
            projectTitleTextField.setForeground(Color.GRAY);
            empNumberTextField.setForeground(Color.GRAY);
            proWorth.setForeground(Color.GRAY);
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this,"Error in Saving Project","Error",JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        deadlineDate=null;
        //this.fillTable();
    }//GEN-LAST:event_doneButtonActionPerformed

    private void projectCompleteCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_projectCompleteCheckItemStateChanged
        // TODO add your handling code here:
        
        if(projectCompleteCheck.isSelected() && !this.projectIdTextFieldTwo.getText().equals("Project ID"))
        {
            int projectId=Integer.parseInt(this.projectIdTextFieldTwo.getText());
            try 
            {
                LocalDate date=LocalDate.now();
                int mm=date.getMonthValue();
                int dd=date.getDayOfMonth();
                int yy=date.getYear();
                Project.statement.executeUpdate("UPDATE PROS SET STATUS='COMPLETED' WHERE PRO_ID="+projectId);
                Project.statement.executeQuery("UPDATE PROS SET COMP_DATE=to_date('"+yy+"-"+mm+"-"+dd+"',"+"'YYYY-MM-DD')"+" WHERE PRO_ID="+projectId);
                JOptionPane.showMessageDialog(this,"Updated Succesfully...","Completed",JOptionPane.INFORMATION_MESSAGE);
                
                projectIdTextFieldTwo.setText("Project ID");
                projectIdTextFieldTwo.setForeground(Color.GRAY);
                projectCompleteCheck.setSelected(false);
            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this, ex,"Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
                //Logger.getLogger(ProjectScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_projectCompleteCheckItemStateChanged

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if(this.projectIdTextField.getText().equals("Project ID") || this.projectTitleTextField.getText().equals("Project Title") || this.empNumberTextField.getText().equals("Emp Number"))
        {
            JOptionPane.showMessageDialog(this,"Some required fields are empty","Error",JOptionPane.ERROR_MESSAGE);
            return;
            
        }
        int projectId=Integer.parseInt(projectIdTextField.getText());
        String projectTitle=projectTitleTextField.getText();
        int empNumber=Integer.parseInt(empNumberTextField.getText());
        String type=(String) projectTypeBox.getSelectedItem();
        int oldProjectId=Integer.parseInt(JOptionPane.showInputDialog("Enter old ID:"));
        int worth=Integer.parseInt(proWorth.getText());
        
        try
        {
            Project.statement.executeUpdate("UPDATE PROS SET PRO_ID="+projectId+" WHERE PRO_ID="+oldProjectId);
            Project.statement.executeUpdate("UPDATE PROS SET PRO_TITLE='"+projectTitle+"' WHERE PRO_ID="+projectId);
            Project.statement.executeUpdate("UPDATE PROS SET EMPNO="+empNumber+" WHERE PRO_ID="+projectId);
            Project.statement.executeUpdate("UPDATE PROS SET PRO_TYPE='"+type+"' WHERE PRO_ID="+projectId);
            Project.statement.executeUpdate("UPDATE PROS SET DEADLINE='"+this.deadlineDate+"' WHERE PRO_ID="+projectId);
            Project.statement.executeUpdate("UPDATE PROS SET WORTH='"+worth+"' WHERE PRO_ID="+projectId);
            
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this, e,"Error",JOptionPane.ERROR_MESSAGE);
        }
           
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelledCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cancelledCheckItemStateChanged
        // TODO add your handling code here:
        if(this.cancelledCheck.isSelected() && !this.projectIdTextFieldTwo.getText().equals(""))
        {
            int projectId=Integer.parseInt(this.projectIdTextFieldTwo.getText());
            try {
                Project.statement.executeUpdate("UPDATE PROS SET STATUS='CENCELLED' WHERE PRO_ID="+projectId);
                
                JOptionPane.showMessageDialog(this,"Updated Succesfully...","Completed",JOptionPane.INFORMATION_MESSAGE);
                
                projectIdTextFieldTwo.setText("Project ID");
                projectIdTextFieldTwo.setForeground(Color.GRAY);
                
                cancelledCheck.setSelected(false);
            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this, ex,"Error",JOptionPane.ERROR_MESSAGE);
                //Logger.getLogger(ProjectScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cancelledCheckItemStateChanged

    private void proWorthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_proWorthFocusGained
        // TODO add your handling code here:
        
        if(proWorth.getText().equals("Worth"))
        {
            proWorth.setText("");
            proWorth.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_proWorthFocusGained

    private void proWorthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_proWorthFocusLost
        // TODO add your handling code here:
        
        if(proWorth.getText().equals(""))
        {
            proWorth.setText("Worht");
            proWorth.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_proWorthFocusLost

    public void showDeadLineProjects()
    {
        try 
        {
            ResultSet rs=Project.statement.executeQuery("SELECT PRO_TITLE FROM PROS WHERE DEADLINE='"+LocalDate.now()+"'");
            
            
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, ex,"Error",JOptionPane.ERROR_MESSAGE);
           // Logger.getLogger(ProjectScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignLabel;
    private javax.swing.JCheckBox cancelledCheck;
    private javax.swing.JPanel datePanel;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextField empNumberTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField proWorth;
    private javax.swing.JCheckBox projectCompleteCheck;
    private javax.swing.JTextField projectIdTextField;
    private javax.swing.JTextField projectIdTextFieldTwo;
    private javax.swing.JTextField projectTitleTextField;
    private javax.swing.JComboBox<String> projectTypeBox;
    private javax.swing.JLabel projectTypeLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
